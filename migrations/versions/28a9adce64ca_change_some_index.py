"""change some index

Revision ID: 28a9adce64ca
Revises: 1d26df2fd19c
Create Date: 2025-02-22 05:00:03.403478

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '28a9adce64ca'
down_revision: Union[str, None] = '1d26df2fd19c'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('thread_members',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('thread_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('join_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('thread_mutes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('thread_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('is_muted', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.add_column('friend_requests', sa.Column('id', sa.Integer(), nullable=False))
    op.execute("ALTER TABLE friend_requests DROP CONSTRAINT IF EXISTS unique_user_friend")

    op.create_unique_constraint('unique_user_friend', 'friend_requests', ['user_id', 'friend_id'])
    op.drop_constraint('friend_requests_friend_id_fkey', 'friend_requests', type_='foreignkey')
    op.drop_constraint('friend_requests_user_id_fkey', 'friend_requests', type_='foreignkey')
    op.drop_constraint('friends_user_id_fkey', 'friends', type_='foreignkey')
    op.drop_column('friends', 'id')
    op.add_column('messages', sa.Column('message_id', sa.Integer(), nullable=False))
    op.add_column('messages', sa.Column('reply_to_message_id', sa.Integer(), nullable=True))
    op.drop_column('messages', 'reply_to_content')
    op.drop_column('messages', 'reply_to_id')
    op.drop_column('messages', 'id')
    op.add_column('reactions', sa.Column('id', sa.Integer(), nullable=False))
    op.add_column('reactions', sa.Column('count', sa.Integer(), nullable=False))
    op.add_column('threads', sa.Column('thread_name', sa.String(), nullable=False))
    op.add_column('threads', sa.Column('description', sa.String(), nullable=True))
    op.add_column('threads', sa.Column('public_url', sa.String(), nullable=True))
    op.add_column('threads', sa.Column('is_public', sa.Boolean(), nullable=True))
    op.drop_column('threads', 'last_message_sender_name')
    op.drop_column('threads', 'name')
    op.drop_column('threads', 'deleted_at')
    op.drop_column('threads', 'last_message_created_at')
    op.drop_column('threads', 'last_message_sender_id')
    op.drop_column('threads', 'last_message_id')
    op.drop_column('threads', 'last_message_content')
    op.add_column('users', sa.Column('user_id', sa.Integer(), nullable=False))
    op.add_column('users', sa.Column('phone_number', sa.String(), nullable=True))
    op.add_column('users', sa.Column('handle', sa.String(), nullable=True))
    op.drop_column('users', 'hashed_password')
    op.drop_column('users', 'id')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('users_id_seq'::regclass)"), autoincrement=True, nullable=False))
    op.add_column('users', sa.Column('hashed_password', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.drop_column('users', 'handle')
    op.drop_column('users', 'phone_number')
    op.drop_column('users', 'user_id')
    op.add_column('threads', sa.Column('last_message_content', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('threads', sa.Column('last_message_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('threads', sa.Column('last_message_sender_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('threads', sa.Column('last_message_created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('threads', sa.Column('deleted_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('threads', sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('threads', sa.Column('last_message_sender_name', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.drop_column('threads', 'is_public')
    op.drop_column('threads', 'public_url')
    op.drop_column('threads', 'description')
    op.drop_column('threads', 'thread_name')
    op.drop_column('reactions', 'count')
    op.drop_column('reactions', 'id')
    op.add_column('messages', sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False))
    op.add_column('messages', sa.Column('reply_to_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('messages', sa.Column('reply_to_content', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.drop_column('messages', 'reply_to_message_id')
    op.drop_column('messages', 'message_id')
    op.add_column('friends', sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False))
    op.create_foreign_key('friends_user_id_fkey', 'friends', 'users', ['user_id'], ['id'])
    op.create_foreign_key('friend_requests_user_id_fkey', 'friend_requests', 'users', ['user_id'], ['id'])
    op.create_foreign_key('friend_requests_friend_id_fkey', 'friend_requests', 'users', ['friend_id'], ['id'])
    op.drop_constraint('unique_user_friend', 'friend_requests', type_='unique')
    op.drop_column('friend_requests', 'id')
    op.drop_table('thread_mutes')
    op.drop_table('thread_members')
    # ### end Alembic commands ###
